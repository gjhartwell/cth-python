var oh_current = LOAD_CHANNEL_NUMBER (119)
var hf_ovf_current = ADD (LOAD_CHANNEL_NUMBER (0), MULTIPLY (NUMBER (0.0), oh_current))
var tvf_current    = ADD (LOAD_CHANNEL_NUMBER (1), MULTIPLY (NUMBER (0.0), oh_current))
var svf_current    = ADD (LOAD_CHANNEL_NUMBER (2), MULTIPLY (NUMBER (0.0), oh_current))
var rf_ef_current  = ADD (ADD (LOAD_CHANNEL_NUMBER (4),LOAD_CHANNEL_NUMBER (7)), MULTIPLY (NUMBER (0.0), oh_current))
var tf_current     = ADD (LOAD_CHANNEL_NUMBER (3), MULTIPLY (NUMBER (0.0), oh_current))
var coil_currents = ARRAY (hf_ovf_current, tvf_current, oh_current, svf_current, rf_ef_current, tf_current)
var 1PI264 = ZERO_BEGINNING ( 
    SUBTRACT (
        LOAD_CHANNEL_NUMBER (171),
        DOT_PRODUCT (
            coil_currents, 
            ARRAY (                 NUMBER (1.065E-1), 
                NUMBER (2.26E-1), 
                NUMBER (9.384E-4), 
                NUMBER (2.761E-1), 
                NUMBER (1.789E-8), 
                NUMBER (5.475E-1)
            )
        )
    )
)
var vloop1 = ZERO_BEGINNING ( LOAD_CHANNEL_NUMBER(108) )
var vloop2 = ZERO_BEGINNING ( LOAD_CHANNEL_NUMBER(109) )
var vloop3 = ZERO_BEGINNING ( LOAD_CHANNEL_NUMBER(110) )
var vloop4 = ZERO_BEGINNING ( LOAD_CHANNEL_NUMBER(111) )
var vloop = ADD ( vloop1, ADD ( vloop2, ADD ( vloop3 , vloop4 ) ) )
var vv_current = ADD (
    MULTIPLY( vloop, 
	    NUMBER (355.9) 
	),
	    ADD ( NUMBER (33.3),
		    MULTIPLY ( 1PI264, NUMBER (0.048446)
			)
		)	  
)
var curtor = SUBTRACT (
    1PI264,
    MULTIPLY (
        vv_current,
        NUMBER (0.022)
    )
)
var hcf_current = AVERAGE (
    ARRAY (
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (40),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (-0.08469),
                    NUMBER (1.23E-01),
                    NUMBER (1.67E-03),
                    NUMBER (6.85E-04),
                    NUMBER (-3.47E-03),
                    NUMBER (2.41E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (41),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (0.05288),
                    NUMBER (-1.23E-01),
                    NUMBER (-6.19E-04),
                    NUMBER (-8.15E-03),
                    NUMBER (-2.62E-02),
                    NUMBER (-6.31E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (36),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (-0.1435),
                    NUMBER (-9.42E-02),
                    NUMBER (7.56E-04),
                    NUMBER (9.26E-03),
                    NUMBER (-1.88E-02),
                    NUMBER (1.80E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (37),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (-0.07036),
                    NUMBER (9.27E-02),
                    NUMBER (2.52E-03),
                    NUMBER (-1.32E-02),
                    NUMBER (-2.31E-02),
                    NUMBER (1.77E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (38),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (-0.03124),
                    NUMBER (1.13E-01),
                    NUMBER (1.34E-03),
                    NUMBER (7.76E-03),
                    NUMBER (6.24E-03),
                    NUMBER (1.62E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (39),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (0.02473),
                    NUMBER (-1.57E-01),
                    NUMBER (8.48E-04),
                    NUMBER (-4.22E-03),
                    NUMBER (-9.56E-03),
                    NUMBER (-2.66E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (32),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (0.1161),
                    NUMBER (-6.08E-03),
                    NUMBER (-3.16E-03),
                    NUMBER (9.97E-03),
                    NUMBER (4.16E-02),
                    NUMBER (-1.39E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (33),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (-0.2028),
                    NUMBER (-1.61E-01),
                    NUMBER (2.19E-03),
                    NUMBER (-5.49E-04),
                    NUMBER (-2.21E-02),
                    NUMBER (1.85E-01)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (34),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (-0.07523),
                    NUMBER (-8.99E-02),
                    NUMBER (2.11E-03),
                    NUMBER (-8.77E-03),
                    NUMBER (2.74E-02),
                    NUMBER (2.57E-02)
                )
            )
        ),
        SUBTRACT (
            LOAD_CHANNEL_NUMBER (35),             DOT_PRODUCT (
                coil_currents,
                ARRAY (                     NUMBER (0.1193),
                    NUMBER (6.58E-02),
                    NUMBER (3.25E-03),
                    NUMBER (2.29E-03),
                    NUMBER (-1.05E-02),
                    NUMBER (-2.17E-01)
                )
            )
        )
    )
)
var int002 = MULTIPLY(NUMBER(0.5),LOAD_CHANNEL(processed:intfrm_1mm:int_nedl_2))
var pres_scale = MULTIPLY (int002, MULTIPLY ( ADD (1PI264, MULTIPLY (NUMBER (0.0), oh_current)), NUMBER (2.40E-21)))
var init_condition_array = ARRAY (tvf_current, svf_current, curtor)
var phiedge = ADD (
    DOT_PRODUCT (
        ARRAY (NUMBER (-2.216E-5), NUMBER (3.264E-5), NUMBER (-2.192E-7)),
        init_condition_array
    ), NUMBER (-1.576E-2)
)
var rbc = ARRAY (
    ADD (
        DOT_PRODUCT (
            ARRAY (NUMBER (-4.807E-5), NUMBER (9.497E-5), NUMBER (1.117E-6)),
            init_condition_array
        ), NUMBER (0.7338)
    ),
    ADD (
        DOT_PRODUCT (
            ARRAY (NUMBER (0.0), NUMBER (-6.695E-5), NUMBER (9.69E-7)),
            init_condition_array
        ), NUMBER (9.653E-2)
    )
)
var zbs = ARRAY (
    MULTIPLY (NUMBER (0.0), hf_ovf_current),
    ADD (
    	MULTIPLY (NUMBER (0.0), hf_ovf_current),
        NUMBER (0.2)
    )
)
class vmec_data {
    class coil_currents {
        hf_ovf_current,
        tvf_current,
        oh_current,
        svf_current,
        rf_ef_current,
        tf_current,
        vv_current,
        hcf_current
    },
    class plasma_current {
        curtor
    },
    class plasma_pressure {
        pres_scale
    },
    class fit_parameters {
        phiedge
    },
    class positioning {
        rbc,
        zbs
    }
}
class v3fit_data {
}
